;;
;; Header files for ThreeSideContract
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Offer$_store
builder $Offer$_store(builder build_0, (int, int, int, slice, slice, slice, slice) v) inline_ref;

;; $Offer$_load
(slice, ((int, int, int, slice, slice, slice, slice))) $Offer$_load(slice sc_0) inline_ref;

;; $LoadBalane$_load
(slice, ((int))) $LoadBalane$_load(slice sc_0) inline;

;; $CreateOffer$_load
(slice, ((int, int, slice, int, slice, slice))) $CreateOffer$_load(slice sc_0) inline_ref;

;; $Swap$_load
(slice, ((int, slice))) $Swap$_load(slice sc_0) inline;

;; $Claim$_load
(slice, ((int, slice))) $Claim$_load(slice sc_0) inline;

;; $ThreeSideContract$_store
builder $ThreeSideContract$_store(builder build_0, ((int, int, int, slice, slice, slice, slice)) v) inline;

;; $ThreeSideContract$_load
(slice, (((int, int, int, slice, slice, slice, slice)))) $ThreeSideContract$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Offer$_constructor_id_amountOut_amountIn_currencyOut_currencyIn_makerAddress_takerAddress
((int, int, int, slice, slice, slice, slice)) $Offer$_constructor_id_amountOut_amountIn_currencyOut_currencyIn_makerAddress_takerAddress(int $id, int $amountOut, int $amountIn, slice $currencyOut, slice $currencyIn, slice $makerAddress, slice $takerAddress) inline;

;; $ThreeSideContract$_contract_init
((int, int, int, slice, slice, slice, slice)) $ThreeSideContract$_contract_init() impure inline_ref;

;; $ThreeSideContract$_contract_load
((int, int, int, slice, slice, slice, slice)) $ThreeSideContract$_contract_load() impure inline_ref;

;; $ThreeSideContract$_contract_store
() $ThreeSideContract$_contract_store(((int, int, int, slice, slice, slice, slice)) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_to_bounce_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value_mode(slice $to, int $bounce, int $value, int $mode) inline;

;; $ThreeSideContract$_fun_Swap
(((int, int, int, slice, slice, slice, slice)), ()) $ThreeSideContract$_fun_Swap(((int, int, int, slice, slice, slice, slice)) $self, (int, int, int, slice, slice, slice, slice) $offer) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $ThreeSideContract$_fun_forward
(((int, int, int, slice, slice, slice, slice)), ()) $ThreeSideContract$_fun_forward(((int, int, int, slice, slice, slice, slice)) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $ThreeSideContract$_fun_notify
(((int, int, int, slice, slice, slice, slice)), ()) $ThreeSideContract$_fun_notify(((int, int, int, slice, slice, slice, slice)) $self, cell $body) impure inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
